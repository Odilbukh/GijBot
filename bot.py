# -*- coding: utf8 -*-
import telebot
import datetime
from telebot import types
from telegramcalendar import create_calendar
import config

bot = telebot.TeleBot(config.token)

print(bot.get_me())

def log(message, answer):
    print("\n -----")
    from datetime import datetime
    print(datetime.now())
    print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1} (id = {2}), username - {4} \n –¢–µ–∫—Å—Ç - {3}." .format(message.from_user.first_name,
                                                                 message.from_user.last_name,
                                                                 str(message.from_user.id),
                                                                 message.text,
                                                                 message.from_user.username))
    print(answer)



@bot.message_handler(commands=["start"])
def main_menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["üìñ –ú–µ–Ω—é", "üõã –ò–Ω—Ç–µ—Ä—å–µ—Ä"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["‚ÑπÔ∏è –û –Ω–∞—Å", "üì£ –ù–æ–≤–æ—Å—Ç–∏"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"]])
    mess = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µÔ∏è", reply_markup=keyboard)
    bot.register_next_step_handler(mess, menu)

@bot.message_handler(content_types=["text"])
def menu(message):
    if message.text == "‚ÑπÔ∏è –û –Ω–∞—Å":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        a = "–£—é—Ç–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ —Ä–∞—Å–ø–æ–ª–æ–∂–∏–ª—Å—è –≤ —Å–∞–º–æ–º –∑–µ–ª–µ–Ω–æ–º —É–≥–æ–ª–∫–µ —Ü–µ–Ω—Ç—Ä–∞ –¢–∞—à–∫–µ–Ω—Ç–∞, –æ–±—ä–µ–¥–∏–Ω–∏–≤ –ø–æ–¥ –æ–¥–Ω–æ–π –∫—Ä—ã—à–µ–π –±—É—Ö–∞—Ä—Å–∫–∏–π —Å—Ç–∏–ª—å, –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç –∏ –∫–æ–ª–æ—Ä–∏—Ç. \n \n üè°  –ê–¥—Ä–µ—Å: —É–ª. –õ–∞–±–∑–∞–∫, 103 \n –û—Ä–∏–µ–Ω—Ç–∏—Ä: –ù–∞–ø—Ä–æ—Ç–∏–≤ –ö–æ–ª–ª–µ–¥–∂ –°–≤—è–∑–∏ –∏ —Ä—è–¥–æ–º —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º –ê—Ñ—Å–æ–Ω–∞ \n ‚òéÔ∏è  +998 98 809 22 62 \n üïò  09:00 - 23:00"
        b = "https://teletype.in/@gijduvonbot/BJF7dmkIm"
        d = "https://teletype.in/@gijduvonbot/rJlR89rwQ"
        bot.send_message(message.chat.id, a,  parse_mode="HTML", reply_markup=keyboard)
        bot.send_message(message.chat.id, b, parse_mode="HTML", reply_markup=keyboard)
        bot.send_message(message.chat.id, d, parse_mode="HTML", reply_markup=keyboard)
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))

    if message.text == "üì£ –ù–æ–≤–æ—Å—Ç–∏":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        n = "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–π. \n<b>Gijduvon Restoran –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:</b>\nüëâ http://gijduvon.uz/"
        h = "–ò—â–∏—Ç–µ –Ω–∞—Å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö. \n –ú—ã –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–µ: https://www.instagram.com/restaurant_gijduvon/ \n –ù–∞—à –§–µ–π—Å–±—É–∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: https://www.facebook.com/gjduvon.kafe"
        bot.send_message(message.chat.id, n, parse_mode="HTML", reply_markup=keyboard)
        bot.send_message(message.chat.id, h, parse_mode="HTML", reply_markup=keyboard)
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))



    if message.text == "üìñ –ú–µ–Ω—é":
        bot.send_photo(message.chat.id, photo=open('picture/menu.jpg', 'rb'))
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))


    if message.text == "üõã –ò–Ω—Ç–µ—Ä—å–µ—Ä":
        bot.send_photo(message.chat.id, photo=open('picture/pic1.jpg', 'rb'))
        bot.send_photo(message.chat.id, photo=open('picture/pic2.jpg', 'rb'))
        bot.send_photo(message.chat.id, photo=open('picture/pic3.jpg', 'rb'))
        bot.send_photo(message.chat.id, photo=open('picture/pic4.jpg', 'rb'))
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))


    if message.text == "üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫":
        t = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å:"
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]])
        bot.send_message(message.chat.id, t, parse_mode="HTML", reply_markup=keyboard)
        bot.register_next_step_handler(message, number)
        to_chat_id = "587471037"
        bot.forward_message(to_chat_id, message.from_user.id, message.message_id)
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))

    if message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in ["üìñ –ú–µ–Ω—é", "üõã –ò–Ω—Ç–µ—Ä—å–µ—Ä"]])
        keyboard.add(*[types.KeyboardButton(name) for name in ["‚ÑπÔ∏è –û –Ω–∞—Å", "üì£ –ù–æ–≤–æ—Å—Ç–∏"]])
        keyboard.add(*[types.KeyboardButton(name) for name in ["üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫"]])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µÔ∏è", reply_markup=keyboard)
        bot.register_next_step_handler(message, menu)
        print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
              ',',
              '@' + str(message.from_user.username), ',', str(message.from_user.language_code))

def number(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]])
    button_phone = types.KeyboardButton(text="üìû  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard.add(button_phone)
    mess = bot.send_message(message.chat.id, "–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ,  {name}. –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ".format(name=message.text), reply_markup=keyboard)
    bot.register_next_step_handler(mess, get_calendar)
    print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
          ',',
          '@' + str(message.from_user.username), ',', str(message.from_user.language_code))


current_shown_dates={}
@bot.message_handler(commands=['calendar'])
def get_calendar(message):
    now = datetime.datetime.now() #Current date
    chat_id = message.chat.id
    date = (now.year,now.month)
    current_shown_dates[chat_id] = date #Saving the current date in a dict
    markup= create_calendar(now.year,now.month)
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", reply_markup=markup)
    print(str(message.from_user.first_name), ',', str(message.from_user.last_name), ',', str(message.from_user.id),
          ',',
          '@' + str(message.from_user.username), ',', str(message.from_user.language_code))



@bot.callback_query_handler(func=lambda call: call.data == 'next-month')
def next_month(call):
    chat_id = call.message.chat.id
    saved_date = current_shown_dates.get(chat_id)
    if(saved_date is not None):
        year,month = saved_date
        month+=1
        if month>12:
            month=1
            year+=1
        date = (year,month)
        current_shown_dates[chat_id] = date
        markup= create_calendar(year,month)
        bot.edit_message_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", call.from_user.id, call.message.message_id, reply_markup=markup)
        bot.answer_callback_query(call.id, text="")
    else:
        #Do something to inform of the error
        pass

@bot.callback_query_handler(func=lambda call: call.data == 'previous-month')
def previous_month(call):
    chat_id = call.message.chat.id
    saved_date = current_shown_dates.get(chat_id)
    if(saved_date is not None):
        year,month = saved_date
        month-=1
        if month<1:
            month=12
            year-=1
        date = (year,month)
        current_shown_dates[chat_id] = date
        markup= create_calendar(year,month)
        bot.edit_message_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", call.from_user.id, call.message.message_id, reply_markup=markup)
        bot.answer_callback_query(call.id, text="")

    else:
        #Do something to inform of the error
        pass

@bot.callback_query_handler(func=lambda call: call.data[0:13] == 'calendar-day-')
def get_day(call):
    chat_id = call.message.chat.id
    saved_date = current_shown_dates.get(chat_id)
    if(saved_date is not None):
        day=call.data[13:]
        date = datetime.datetime(int(saved_date[0]),int(saved_date[1]),int(day))
        msg = bot.send_message(chat_id, str(date))
        bot.answer_callback_query(call.id, text="–î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞")
        chat = "587471037"
        bot.forward_message(chat, call.message.chat.id, call.message.message_id)
        bot.register_next_step_handler(msg, person)

    else:
        #Do something to inform of the error
        pass

def person(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=0.2)
    keyboard.add(*[types.KeyboardButton(name) for name in ["1", "2", "3", "4", "5", "6"]])
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]])
    mess = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω:", reply_markup=keyboard)
    bot.register_next_step_handler(mess, answer)

def answer(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]])
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –î–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏ —Å–µ–±–µ, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏", reply_markup=keyboard)
    bot.register_next_step_handler(message, main_menu)


if __name__ == '__main__':
    bot.polling(none_stop=True)
